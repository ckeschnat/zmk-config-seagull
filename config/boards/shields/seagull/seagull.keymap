#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NUMPAD 0
#define BLUETOOTH 1
#define _C      LC
#define _UNDO       _C(Z)
#define _CUT        _C(X)
#define _COPY       _C(C)
#define _PASTE      _C(V)
#define _FIND       _C(F)
#define _FIND_NEXT  _C(G)
#define _FIND_PREV  _C(LS(G))

#ifndef SELECT_WORD_DELAY
#define SELECT_WORD_DELAY 1
#endif

/ {
	macros {
		select_line: select_line {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&select_line_right>, <&select_line_left>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};

		ZMK_MACRO(select_line_right,
			wait-ms = <SELECT_WORD_DELAY>;
			tap-ms = <SELECT_WORD_DELAY>;
			bindings = <&kp HOME &kp LS(END)>;
		)

		ZMK_MACRO(select_line_left,
			wait-ms = <SELECT_WORD_DELAY>;
			tap-ms = <SELECT_WORD_DELAY>;
			bindings = <&kp END &kp LS(HOME)>;
		)
	};

	keymap {
		compatible = "zmk,keymap";

		layer_numpad {
			display-name = "Numpad";

			bindings = <
				&select_line    &kp KP_N9        &kp KP_N9        &kp KP_MULTIPLY
				&kp KP_N4       &kp KP_N5        &kp KP_N6        &kp _CUT
				&kp KP_N1       &kp KP_N2        &kp KP_N3        &kp _COPY    &tog BLUETOOTH
				&kp KP_N0       &kp KP_DOT       &kp KP_PLUS      &kp _PASTE
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		layer_bluetooth {
			display-name = "BT";

			bindings = <
				&bt BT_CLR      &none         &none           &bootloader
				&none           &none         &none           &none
				&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2    &none        &tog BLUETOOTH
				&none           &none         &none           &none
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
